"""Add classroom, timeslot and schedule models

Revision ID: 6a6042f40ff6
Revises: 0a9f254b3606
Create Date: 2025-06-29 00:06:58.292509

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '6a6042f40ff6'
down_revision: Union[str, None] = '0a9f254b3606'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Önce enum tiplerini oluştur
    project_type = postgresql.ENUM('FINAL', 'INTERIM', name='projecttype', create_type=True)
    project_type.create(op.get_bind())
    
    project_status = postgresql.ENUM('ACTIVE', 'MAKEUP', 'COMPLETED', name='projectstatus', create_type=True)
    project_status.create(op.get_bind())
    
    op.create_table('classrooms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_classrooms_id'), 'classrooms', ['id'], unique=False)
    op.create_index(op.f('ix_classrooms_name'), 'classrooms', ['name'], unique=False)
    op.create_table('timeslots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('period', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_timeslots_end_time'), 'timeslots', ['end_time'], unique=False)
    op.create_index(op.f('ix_timeslots_id'), 'timeslots', ['id'], unique=False)
    op.create_index(op.f('ix_timeslots_period'), 'timeslots', ['period'], unique=False)
    op.create_index(op.f('ix_timeslots_start_time'), 'timeslots', ['start_time'], unique=False)
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('classroom_id', sa.Integer(), nullable=True),
    sa.Column('timeslot_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classroom_id'], ['classrooms.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['timeslot_id'], ['timeslots.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id')
    )
    op.create_index(op.f('ix_schedules_id'), 'schedules', ['id'], unique=False)
    op.create_table('schedule_instructor',
    sa.Column('schedule_id', sa.Integer(), nullable=True),
    sa.Column('instructor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['instructor_id'], ['instructors.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], )
    )
    
    # Mevcut veriler için geçici bir değer ata
    op.execute("UPDATE projects SET type = 'FINAL' WHERE type IS NULL OR type = ''")
    op.execute("UPDATE projects SET status = 'ACTIVE' WHERE status IS NULL OR status = ''")
    
    # USING ifadesi ile tip dönüşümü yap
    op.execute("ALTER TABLE projects ALTER COLUMN type TYPE projecttype USING type::projecttype")
    op.execute("ALTER TABLE projects ALTER COLUMN status TYPE projectstatus USING status::projectstatus")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Önce VARCHAR'a dönüştür
    op.execute("ALTER TABLE projects ALTER COLUMN status TYPE VARCHAR USING status::VARCHAR")
    op.execute("ALTER TABLE projects ALTER COLUMN type TYPE VARCHAR USING type::VARCHAR")
    
    op.drop_table('schedule_instructor')
    op.drop_index(op.f('ix_schedules_id'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_timeslots_start_time'), table_name='timeslots')
    op.drop_index(op.f('ix_timeslots_period'), table_name='timeslots')
    op.drop_index(op.f('ix_timeslots_id'), table_name='timeslots')
    op.drop_index(op.f('ix_timeslots_end_time'), table_name='timeslots')
    op.drop_table('timeslots')
    op.drop_index(op.f('ix_classrooms_name'), table_name='classrooms')
    op.drop_index(op.f('ix_classrooms_id'), table_name='classrooms')
    op.drop_table('classrooms')
    
    # Enum tiplerini kaldır
    postgresql.ENUM(name='projectstatus').drop(op.get_bind())
    postgresql.ENUM(name='projecttype').drop(op.get_bind())
    # ### end Alembic commands ###
